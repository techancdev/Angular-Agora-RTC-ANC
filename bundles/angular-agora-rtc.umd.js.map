{"version":3,"file":"angular-agora-rtc.umd.js.map","sources":["ng://angular-agora-rtc/lib/AgoraConfig.ts","ng://angular-agora-rtc/lib/angular-agora-rtc.service.ts","ng://angular-agora-rtc/lib/agora-local.component.ts","ng://angular-agora-rtc/lib/angular-agora-rtc.module.ts","ng://angular-agora-rtc/lib/AgoraClient.ts","ng://angular-agora-rtc/lib/Stream.ts","ng://angular-agora-rtc/lib/Device.ts"],"sourcesContent":["export class AgoraConfig{\n    AppID:string;\n}","import { Injectable, Inject } from '@angular/core';\nimport * as AgoraRTC from 'agora-rtc-sdk';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { AgoraConfig } from './AgoraConfig';\nimport { AgoraClient } from './AgoraClient';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularAgoraRtcService {\n\n  public audioDevices: any[];\n  public videoDevices: any[];\n\n  public client: AgoraClient;\n\n  constructor(\n    @Inject('config') private config:AgoraConfig\n  ) {\n    if (!this.checkSystemRequirements()) {\n      this.logger('error', 'Web RTC is not supported');\n    } else{\n      this.getDevices();\n    }\n  }\n\n  checkSystemRequirements() {\n    return AgoraRTC.checkSystemRequirements();\n  }\n\n  private getDevices() {\n    AgoraRTC.getDevices((devices) => {\n      let audioDevices = devices.filter(device => {\n        return device.kind === 'audioinput' && device.deviceId !== 'default'\n      });\n      let videoDevices = devices.filter(device => {\n        return device.kind === 'videoinput' && device.deviceId !== 'default'\n      });\n      this.audioDevices = audioDevices;\n      this.videoDevices = videoDevices;\n    });\n  }\n\n  createClient(mode: string = 'interop') {\n     this.client = AgoraRTC.createClient({ mode: mode });\n     this.client.init(this.config.AppID);\n  }\n\n  createStream(streamID: any, audio: boolean, cameraId: string = this.videoDevices[0].deviceId, microphoneId: string = this.audioDevices[0].deviceId, video: boolean, screen: boolean) {\n    return AgoraRTC.createStream({streamID, audio, cameraId, microphoneId, video, screen});\n  }\n\n  logger(type: string, message: string) {\n    switch (type) {\n      case 'error':\n        AgoraRTC.Logger.error(message);\n        break;\n      case 'warning':\n        AgoraRTC.Logger.warning(message);\n        break;\n      case 'info':\n        AgoraRTC.Logger.info(message);\n        break;\n      case 'debug':\n        AgoraRTC.Logger.debug(message);\n        break;\n      default:\n        AgoraRTC.Logger.error(message);\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { AngularAgoraRtcService } from './angular-agora-rtc.service';\nimport { Stream } from './Stream';\n\n@Component({\n  selector: 'agora-rtc',\n  template: `<div class=\"video-container\">\n\t<div class=\"call-container\">\n\t</div>\n\t<div class=\"agora_local\">\n\t\t<div class=\"video-buttons\">\n\t\t\t<i class=\"startCall material-icons\" (click)=\"startCall()\" *ngIf=\"!activeCall\">videocam</i>\n\t\t\t<ng-container *ngIf=\"activeCall\">\n\t\t\t\t<i class=\"endCall material-icons\" (click)=\"leave()\" *ngIf=\"activeCall\">phone</i>\n\n\t\t\t\t<i class=\"mic material-icons\" (click)=\"toggleAudio()\" *ngIf=\"audioEnabled\">mic</i>\n\t\t\t\t<i class=\"mic material-icons\" (click)=\"toggleAudio()\" *ngIf=\"!audioEnabled\">mic_off</i>\n\n\t\t\t\t<i class=\"mic material-icons\" (click)=\"toggleVideo()\" *ngIf=\"videoEnabled\">videocam</i>\n\t\t\t\t<i class=\"mic material-icons\" (click)=\"toggleVideo()\" *ngIf=\"!videoEnabled\">videocam_off</i>\n\t\t\t</ng-container>\n\t\t</div>\n\t\t<div id=\"agora_local\"></div>\n\t</div>\n\t<div class=\"agora_remote\" *ngFor=\"let remote of remoteCalls\" [id]=\"remote\">\n\n\t</div>\n</div>`,\n  styles: [`@import url(https://fonts.googleapis.com/icon?family=Material+Icons);p{font-family:Lato}.video-container{height:100vh;display:flex;flex-wrap:wrap;flex-direction:row;justify-content:center}.agora_local{background-color:#404040;height:250px;width:250px;border:1px solid #000;margin:8px}#agora_local{height:250px;width:250px;top:-28px}.agora_remote{background-color:#404040;height:250px;width:250px;border:1px solid #000;margin:8px}.video-buttons{width:250px;top:210px;position:relative;text-align:center;z-index:999}.video-buttons i{cursor:pointer}.endCall{color:red}.mic,.startCall{color:#fff}`]\n})\nexport class AgoraLocalComponent {\n\n  activeCall: boolean = false;\n  audioEnabled: boolean = true;\n  videoEnabled: boolean = true;\n  localStream: Stream\n  remoteCalls: any = [];\n\n  constructor(\n    private agoraService: AngularAgoraRtcService\n  ) {\n    this.agoraService.createClient();\n  }\n\n  startCall() {\n    this.activeCall = true;\n    this.agoraService.client.join(null, '1000', null, (uid) => {\n      this.localStream = this.agoraService.createStream(uid, true, null, null, true, false);\n      this.localStream.setVideoProfile('720p_3');\n      this.subscribeToStreams();\n    });\n  }\n\n  private subscribeToStreams() {\n    this.localStream.on(\"accessAllowed\", () => {\n      console.log(\"accessAllowed\");\n    });\n    // The user has denied access to the camera and mic.\n    this.localStream.on(\"accessDenied\", () => {\n      console.log(\"accessDenied\");\n    });\n\n    this.localStream.init(() => {\n      console.log(\"getUserMedia successfully\");\n      this.localStream.play('agora_local');\n      this.agoraService.client.publish(this.localStream, function (err) {\n        console.log(\"Publish local stream error: \" + err);\n      });\n      this.agoraService.client.on('stream-published', function (evt) {\n        console.log(\"Publish local stream successfully\");\n      });\n    }, function (err) {\n      console.log(\"getUserMedia failed\", err);\n    });\n\n    this.agoraService.client.on('error', (err) => {\n      console.log(\"Got error msg:\", err.reason);\n      if (err.reason === 'DYNAMIC_KEY_TIMEOUT') {\n        this.agoraService.client.renewChannelKey(\"\", () => {\n          console.log(\"Renew channel key successfully\");\n        }, (err) => {\n          console.log(\"Renew channel key failed: \", err);\n        });\n      }\n    });\n\n    this.agoraService.client.on('stream-added', (evt) => {\n      const stream = evt.stream;\n      this.agoraService.client.subscribe(stream, (err) => {\n        console.log(\"Subscribe stream failed\", err);\n      });\n    });\n\n    this.agoraService.client.on('stream-subscribed', (evt) => {\n      const stream = evt.stream;\n      if (!this.remoteCalls.includes(`agora_remote${stream.getId()}`)) this.remoteCalls.push(`agora_remote${stream.getId()}`);\n      setTimeout(() => stream.play(`agora_remote${stream.getId()}`), 2000);\n    });\n\n    this.agoraService.client.on('stream-removed', (evt) => {\n      const stream = evt.stream;\n      stream.stop();\n      this.remoteCalls = this.remoteCalls.filter(call => call !== `#agora_remote${stream.getId()}`);\n      console.log(`Remote stream is removed ${stream.getId()}`);\n    });\n\n    this.agoraService.client.on('peer-leave', (evt) => {\n      const stream = evt.stream;\n      if (stream) {\n        stream.stop();\n        this.remoteCalls = this.remoteCalls.filter(call => call === `#agora_remote${stream.getId()}`);\n        console.log(`${evt.uid} left from this channel`);\n      }\n    });\n  }\n  leave() {\n    this.agoraService.client.leave(() => {\n      this.activeCall = false;\n      document.getElementById('agora_local').innerHTML = \"\";\n      console.log(\"Leavel channel successfully\");\n    }, (err) => {\n      console.log(\"Leave channel failed\");\n    });\n  }\n\n  toggleAudio() {\n    this.audioEnabled = !this.audioEnabled;\n    if (this.audioEnabled) this.localStream.enableAudio();\n    else this.localStream.disableAudio();\n  }\n\n  toggleVideo() {\n    this.videoEnabled = !this.videoEnabled;\n    if (this.videoEnabled) this.localStream.enableVideo();\n    else this.localStream.disableVideo();\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { AgoraLocalComponent } from './agora-local.component';\nimport { AgoraConfig } from './AgoraConfig';\nimport { AngularAgoraRtcService } from './angular-agora-rtc.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [AgoraLocalComponent],\n  exports: [AgoraLocalComponent]\n})\nexport class AngularAgoraRtcModule {\n  static forRoot(config: AgoraConfig): ModuleWithProviders{\n    return {\n      ngModule: AngularAgoraRtcModule,\n      providers: [AngularAgoraRtcService, {provide: 'config', useValue: config}]\n    };\n  }\n }\n","export class AgoraClient {\n    aesMode: string;\n    aespassword: string;\n    configPublisher: any; // function\n    disableDualStream: any; // function\n    enableDualStream: any; // function\n    gatewayClient: {}; // add object\n    highStream: any; // ? type\n    highStreamState: number;\n    init: any; // function\n    isDualStream: boolean;\n    join: any; // function\n    key: any; // ? string\n    leave: any; // function\n    lowStream: any; // ?\n    lowStreamParameter: any // ?\n    lowStreamState: number;\n    on: any; // function\n    proxyServer: any; // ?\n    publish: any; // function\n    renewChannelKey: any; // function\n    setEncryptionMode: any; // function\n    setEncryptionSecret: any; // function\n    setLiveTranscoding: any; // function\n    setLowStreamParameter: any; // function\n    setProxyServer: any; // function\n    setRemoteVideoStreamType: any; // function\n    setTurnServer: any; // function\n    startLiveStreaming: any; // function\n    stopLiveStreaming: any; // function\n    subscribe: any; // function\n    turnServer: any; // function\n    unpublish: any; // function\n    unsubscribe: any; // function\n  }","export class Stream {\n    addEventListener: any; // function\n    audio: boolean;\n    audioEnabled: boolean;\n    audioLevelHelper: any // ?\n    aux_stream: any; // ?\n    close: any; // function \n    disableAudio: any; // function\n    disableVideo: any; // function\n    dispatchEvent: any; // function\n    dispatchSocketEvent: any; // function\n    dispatcher: any; // event listener\n    enableAudio: any; // function\n    enableVideo: any; // function\n    getAttributes: any; // function\n    getAudioLevel: any; // function\n    getId: any; // function\n    getStats: any; // function\n    hasAudio: any; // function\n    hasScreen: any; // function\n    hasVideo: any; // function\n    init: any; // function\n    initialized: boolean;\n    isAudioOn: any; // function\n    isVideoOn: any; // function\n    local: boolean;\n    lowStream: any; //?\n    mirror: boolean;\n    muteAudio: any; // ?\n    muteVideo: any; // ?\n    on: any; // function\n    onClose: any // ?\n    params:\n        { streamID: number, audio: boolean, cameraId: string, microphoneId: string, video: boolean }\n    play: any; // function\n    player: any; // ?\n    removeEventListener: any; // function\n    screen: boolean;\n    screenAttributes: { width: number, height: number, maxFr: number, minFr: number }\n    setScreenProfile: any; // function\n    setVideoBitRate: any; // function\n    setVideoFrameRate: any; // function\n    setVideoProfile: any; // function\n    setVideoProfileCustom: any; // function\n    setVideoProfileCustomPlus: any; // function\n    setVideoResolution: any; // function\n    stop: any; // function\n    streamLanyl // ?\n    streamId: number;\n    unmuteAudio: any; // ?\n    unmuteVideo: any; // ?\n    url: any; //?\n    video: boolean;\n    videoEnabled: boolean;\n    videoHeight: number;\n    videoSize: Array<number>\n    videoWidth: number;\n}","export class Device {\n    deviceId:string;\n    groupId:string;\n    kind:string;\n    label:string;\n}"],"names":["AgoraRTC.checkSystemRequirements","AgoraRTC.getDevices","AgoraRTC.createClient","AgoraRTC.createStream","AgoraRTC.Logger","Injectable","Inject","Component","NgModule","CommonModule"],"mappings":"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"}
